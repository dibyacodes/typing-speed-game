// TODO
/*

track down the WPM

*/
import { useCallback, useEffect, useRef, useState } from "react";
import RandomWord from "./components/RandomWord";
import RemarkCard from "./components/RemarkCard";

function App() {

  const [countdown, setCountDown] = useState(60) // timer
  const [typeStart, setTypeStart] = useState(false) // used for triggering the timer to start
  const [random, setRandomWord] = useState([]) // now this is an array that stores 100 words generated by the API
  const [startAPI, setStartAPI] = useState(false) // initiates an API call
  const [randomIndex, setRandomWordIndex] = useState(0) // used to view the word from the `random` array
  const InputReference = useRef(null)
  const [numOfChars, setNumberOfChars] = useState(0) // tracks down the number of character typed by the user
  const [hiddenInput, setInput] = useState(false)
  const [score, setScore] = useState(0) // scoring
  const [gameDisplay, setGameDisplay] = useState(false)
  let str = '' // stores the word typed by the user (used in the scoring function)
  const [color, setColor] = useState("white")
  const WPM = numOfChars / (5 * 1)
  const API = fetch(`https://random-word-api.herokuapp.com/word?number=100`) // 100 in the end of the URL means that it is generating 100 random words

  // the scoring system
  const scoring = () => {
    console.log(str)
    if (str == random[randomIndex]) {
      setNumberOfChars(numOfChars + str.length)
      setScore(score + 1)
      console.log(score)
    }
    return score
  }

  const type = () => {
    setTypeStart(true)
  }  // called when the user starts to type

  // timer
  const startTimer = useCallback(() => {
    if (typeStart === true) {
      const timer = setTimeout(() => {
        setCountDown((prevTime) => {
          if (prevTime <= 20) {
            setColor("red")
          }
          if (prevTime <= 0 || countdown <= 0) {
            clearTimeout(timer)
            setTypeStart(false)
            setRandomWordIndex(0)
            setInput(true)
            setColor("white")
            setGameDisplay(true)
            return 60
          }
          return prevTime - 1
        })
      }, 1000);
    }
  }, [setCountDown, typeStart, countdown])

  useEffect(() => {
    startTimer()
  }, [setCountDown, startTimer])


  // fetching the API
  useEffect(() => {
    async function fetchAPI() {
      const words = await (await API).json() // receives an array with 100 words
      console.log(words)
      setRandomWord(words) // sends the array to the `random`
    }

    if (startAPI === true) {
      fetchAPI()
      setStartAPI(false) // sets the startAPI to false after receiving one array
      // the startAPI variable is set to true when the user taps on the button
    }
  }, [startAPI, API])

  // console.log(inputBox.current?.value)
  return (
    <div className="bg-[#151515] h-screen">
      {/* remarks card */}
      <div hidden={!gameDisplay}>
        <div className="flex flex-col items-center pt-[10%]">
          <RemarkCard user_score={score} cpm_score={numOfChars} wpm_score={WPM} />
        </div>
      </div>

      {/* the typing game */}
      <div hidden={gameDisplay}>
        <div className={`flex flex-col gap-20 h-screen pt-[10%]`}>
          <div className="flex items-center justify-center gap-10">
            <div className={`text-center rounded-full font-sans border-8 border-[${color}] w-[15rem] h-[15rem] font-bold flex flex-col items-center justify-center`}>
              <h1 className={`text-8xl text-white`}>{countdown}</h1>
              <p className="font-1xl text-white">
                seconds
              </p>
            </div>
            {/* random words from the API */}
            <div className="max-w-fit flex">
              <div className="text-3xl w-full font-mono flex flex-wrap items-center max-w-fit gap-4">
                <div className="text-white">
                  <RandomWord randomWord={random[randomIndex] || "Click 'Start'..."} />
                </div>

                <div className="text-gray-500">
                  <RandomWord randomWord={random[randomIndex + 1]} />
                </div>


                <div className="text-gray-500">
                  <RandomWord randomWord={random[randomIndex + 2]} />
                </div>
              </div>
            </div>
          </div>

          {/* user input field */}
          <div className="flex">
            <div className="flex w-full flex-col justify-center items-center">
              <div className="w-[50%] flex">
                <input
                  className="w-full py-2 text-white text-2xl outline-none bg-[#1F1F1F] text-center cursor-text"
                  onChange={type}
                  type="text"
                  hidden={hiddenInput}
                  id="userInput"
                  placeholder="The timer will start once you start typing..."
                  onKeyDown={(e) => {
                    // console.log(e.keyCode);
                    if (e.keyCode === 32) {
                      e.preventDefault()
                      setRandomWordIndex((prev) => prev + 1)
                      str = (e.target as HTMLInputElement).value;
                      (e.target as HTMLInputElement).value = ''
                      scoring()
                      
                      if (randomIndex >= 99) {
                        setRandomWordIndex(0)
                      }

                    }
                  }}
                  ref={InputReference}
                />
                <div>
                  <button
                    onClick={() => {
                      setStartAPI(true)
                    }}
                    className="bg-white w-full font-bold py-2 px-8 text-2xl"
                  >
                    Start
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default App
